version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=ngl_db
      - POSTGRES_USER=ngl_user
      - POSTGRES_PASSWORD=ngl_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lula-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ngl_user -d ngl_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lula-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
      - temp:/app/temp
    environment:
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://ngl_user:ngl_password@postgres:5432/ngl_db
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your-secret-key-change-in-production
      - UPLOAD_RETENTION_DAYS=30
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lula-network

  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app.celery worker --loglevel=info
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
      - temp:/app/temp
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://ngl_user:ngl_password@postgres:5432/ngl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lula-network

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A celery_app.celery beat --loglevel=info
    volumes:
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://ngl_user:ngl_password@postgres:5432/ngl_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lula-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - lula-network

volumes:
  uploads:
  temp:
  postgres_data:
  redis_data:

networks:
  lula-network:
    driver: bridge
